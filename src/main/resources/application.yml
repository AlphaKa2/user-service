#포트 설정
server:
  port: 8001

spring:
  application:
    name: user-service

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect

  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: account-disable-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: latest

logging:
  pattern:
    console:  >
      %d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX} 
      %highlight(%5level) 
      %magenta(${PID:-}) --- [%15.15thread] [%X{trace.id:-}] 
      %cyan(%logger{36}) : %msg

# local 프로필
---
spring:

  config:
    import: optional:file:.env[.properties]
    activate:
      on-profile: local

  cloud:
    kubernetes:
      enabled: false


  datasource:
    url: "${DB_URL}"
    username: "${DB_USERNAME}"
    password: "${DB_PASSWORD}"

  kafka:
    bootstrap-servers: "${BROKER_URL}"

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
  instance:
    metadata-map:
      instanceName: ${spring.application.name}

# develop 프로필
---
spring:
  config:
    activate:
      on-profile: develop

  datasource:
    url: "${MYSQL_URL}/user_service"
    username: "${MYSQL_USERNAME}"
    password: "${MYSQL_PASSWORD}"

  kafka:
    bootstrap-servers: "${KAFKA_BROKER_SERVER}"

eureka:
  client:
    enabled: false

logging:
  level:
    org.springframework.cloud.kubernetes: DEBUG
    io.kubernetes.client: DEBUG
